name: ci-cd

on:
  push:
    paths:
      - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ '${{ github.sha }}' }})
          echo "COMMIT_ID=$calculatedSha" >> $GITHUB_ENV

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: iagouvea/${{ values.app_name }}:${{ '${{ env.COMMIT_ID }}' }}
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID }}' }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v3

      - name: Modify values file
        shell: bash
        run: |
          pip install yq
          yq -Yi ".deployment.tag = \"${{ '${{ needs.ci.outputs.commit_id }}' }}\"" helm/nodejs-api/values.yaml
  
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Change version in values.yaml'

      - name: Install Argocd CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v3.1.7/argocd-linux-arm64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Argocd Login
        run: |
          argocd login argocd-server.argo.svc.cluster.local \
            --insecure \
            --grpc-web \
            --username admin \
            --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}

      - name: Ensure Argocd app exists
        run: |
          repository="https://github.com/igor-gouvea/${{ values.app_name }}.git"
          argocd repo list | grep -q $repository || argocd repo add $repository

          argocd app get ${{ values.app_name }} ||        \
          argocd app create ${{ values.app_name }}        \
            --repo $repository                            \
            --path helm/nodejs-api                        \
            --dest-namespace dev                          \
            --dest-server https://kubernetes.default.svc  \
            --values values.yaml                          \
            --revision main                               \
            --sync-policy manual                          \
            --sync-option CreateNamespace=true

      - name: Argocd app Sync
        run: |
          argocd app sync ${{ values.app_name }}
          argocd app wait ${{ values.app_name }} --timeout 180